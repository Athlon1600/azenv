user www-data;
worker_processes auto;

## Make sure ulimit -n 65535 is set on your system
worker_rlimit_nofile 65535;

events {
    ## otherwise you get error: 768 worker_connections are not enough
    worker_connections 65535;

    ## more efficient, available on newer Linux
    use epoll;
}

http {

    gzip off;
    keepalive_timeout 0;

    server_tokens off;

    proxy_connect_timeout 10s;
    proxy_read_timeout 10s;
    proxy_send_timeout 10s;

    server {
        listen 80;
        server_name _;

        root /srv;
        index index.php;

        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
        add_header Expires 0;

        access_log off;
        error_log off;

        location = /status {
            stub_status on;
            access_log off;
            #allow 127.0.0.1;
            #deny all;
        }

         location = /fpm_status {
            fastcgi_pass php_fpm:9000;
            # fastcgi_pass 127.0.0.1:9000;

            ## allows us to override path name
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_param SCRIPT_NAME /status;
            fastcgi_param SCRIPT_FILENAME /status;

            # fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            # include fastcgi_params;

            #allow 127.0.0.1;
            #deny all;
        }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        location ~ \.php$ {
            fastcgi_pass php_fpm:9000;
            # fastcgi_pass 127.0.0.1:9000;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            # sometimes root path inside php-fpm container is different
            # fastcgi_param SCRIPT_FILENAME /srv/$fastcgi_script_name;
            include fastcgi_params;
        }
    }
}
